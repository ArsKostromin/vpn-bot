import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage

from bot.handlers import start, vpn, my_services, balance, coupon, menu_callbacks
from bot.handlers.commands_menu import set_main_menu
from bot.config import load_config
from bot.notify_server import run_aiohttp_server  # üëà –∏–º–ø–æ—Ä—Ç aiohttp-—Å–µ—Ä–≤–µ—Ä–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.INFO)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
config = load_config()

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = Bot(
    token=config.bot.token,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
storage = MemoryStorage()
dp = Dispatcher(storage=storage)
dp.include_router(start.router)
dp.include_router(vpn.router)
dp.include_router(my_services.router)
dp.include_router(balance.router)
dp.include_router(menu_callbacks.router)
dp.include_router(coupon.router)

async def main():
    await set_main_menu(bot)

    # –ó–∞–ø—É—Å–∫ aiohttp –∏ polling –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    await asyncio.gather(
        run_aiohttp_server(bot, storage),     # üöÄ aiohttp —Å–µ—Ä–≤–µ—Ä
        dp.start_polling(bot)        # üü¢ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    )

if __name__ == "__main__":
    asyncio.run(main())
