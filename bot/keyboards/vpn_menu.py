# keyboards/vpn_menu.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_vpn_type_kb(types: list[tuple[str, str]]) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for value, display in types:
        kb.button(text=display, callback_data=f"vpn_type:{value}")
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="start_from_button")
    kb.adjust(2)
    return kb.as_markup()


def get_duration_kb(durations: list[tuple[str, str, str, int]]) -> InlineKeyboardMarkup:
    buttons = []

    for code, price, display, discount_percent in durations:
        if discount_percent > 0:
            price = float(price)
            discount_price = price * (1 - discount_percent / 100)
            text = f"{display} ‚Äî ~{price:.2f}$~ {discount_price:.2f}$ üî•"
        else:
            text = f"{display} ‚Äî {price}$"

        buttons.append([
            InlineKeyboardButton(
                text=text,
                callback_data=f"duration:{code}"
            )
        ])

    buttons.append([
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="start_from_button")
    ])

    builder.adjust(2)
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_insufficient_funds_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="balance_up")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="buy_vpn")]
    ])


get_instruktion_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="http://159.198.77.222:8080/"),
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="start_from_button"),
        ],
    ]
)


get_target_vpn = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üå≠ –î–ª—è YouTube –∏ —Å–æ—Ü—Å–µ—Ç–µ–π", callback_data="target:social"),
        ],
        [
            InlineKeyboardButton(text="üè¥‚Äç‚ò†Ô∏è –î–ª—è —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤", callback_data="target:torrent"),
        ],
        [
            InlineKeyboardButton(text="üõ° –î–≤–æ–π–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (Double VPN)", callback_data="target:double"),
        ],
        [
            InlineKeyboardButton(text="üåê –í—ã–±–æ—Ä –ø–æ —Å—Ç—Ä–∞–Ω–µ", callback_data="country"),
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="start_from_button"),
        ],
    ]
)


def get_country_kb() -> InlineKeyboardMarkup:
    buttons = [
        [
            InlineKeyboardButton(text="üá∫üá∏ –°–®–ê", callback_data="target_country"),
            InlineKeyboardButton(text="üáßüá∑ –ë—Ä–∞–∑–∏–ª–∏—è", callback_data="target_country")
        ],
        [
            InlineKeyboardButton(text="üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è", callback_data="target_country"),
            InlineKeyboardButton(text="üáØüáµ –Ø–ø–æ–Ω–∏—è", callback_data="target_country")
        ],
        [
            InlineKeyboardButton(text="üá¶üá™ –û–ê–≠", callback_data="target_country"),
            InlineKeyboardButton(text="üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è", callback_data="target_country")
        ],
        [
            InlineKeyboardButton(text="üá∑üá∫ –†–æ—Å—Å–∏—è", callback_data="target_country"),
            InlineKeyboardButton(text="üáøüá¶ –Æ–ê–†", callback_data="target_country")
        ],
        [
            InlineKeyboardButton(text="‚öôÔ∏è –ê–∫–∫–∞—É–Ω—Ç", callback_data="account")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="start_from_button")
        ]
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_confirmation_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data="confirm_payment")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="start_from_button")],
    ])