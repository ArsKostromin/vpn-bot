from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from bot.db import get_user, create_user
from aiogram.filters import Command
from bot.keyboards.main_menu import inline_main_menu
from bot.keyboards.start_menu import inline_instruction_buttons, reply_main_menu
import aiohttp
from bot.services.user_service import register_user_via_api
from aiogram.enums import ParseMode
from bot.keyboards.reply import main_menu_kb  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É


router = Router()


@router.message(F.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def main_menu_button_pressed(message: Message):
    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –∫–Ω–æ–ø–∫–æ–π ‚Äî –¥–µ–ª–∞–µ–º —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –ø—Ä–∏ /start
    await process_start(message.from_user.id, message.from_user.username, message)

@router.message(Command("start"))
async def cmd_start(message: Message):
    await process_start(message.from_user.id, message.from_user.username, message)

@router.callback_query(F.data == "start_from_button")
async def callback_start(callback: CallbackQuery):
    await process_start(callback.from_user.id, callback.from_user.username, callback.message)
    await callback.answer()

async def process_start(user_id: int, username: str, respond_to: Message):
    result = await register_user_via_api(user_id)

    # –ü–ï–†–í–´–ú –¥–µ–ª–æ–º –≤—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º ReplyKeyboardMarkup ("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    await respond_to.answer(
        text="–ú–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=main_menu_kb
    )

    if result:
        link_code, created = result

        if created:
            await respond_to.answer(
                text=(
                    f"‚úÖ–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ YouFast VPN‚Ñ¢, {respond_to.from_user.full_name}!\n\n"
                    "üîß –í–∞—à VPN –£–ñ–ï –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω **–ë–ï–°–ü–õ–ê–¢–ù–û —Ç—Ä–∏ –¥–Ω—è!**\n\n"
                    "üì≤ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π OS:\n\n"
                    "üçè iOS: [neroVPN](https://)\n"
                    "ü§ñ Android: [neroVPN](https://)\n"
                    "üñ•Ô∏è Windows: [neroVPN](https://)\n"
                    "üçè MacOS: [neroVPN](https://)\n\n"
                    "üîó –ü–æ–¥–∫–ª—é—á–∏—Ç–µ VPN –∫–ª—é—á –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å):\n\n"
                    f"`{link_code}`\n\n"
                    "-----------------------------\n"
                    "üí∞ –ù–∞—à–∏ —Ü–µ–Ω—ã –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–π –≤–µ—Ä—Å–∏–∏:\n"
                    "‚îú 1 –º–µ—Å: $5\n"
                    "‚îú 6 –º–µ—Å: $27 (-10%)\n"
                    "‚îú 1 –≥–æ–¥: $48.7 (-20%)\n"
                    "‚îú 3 –≥–æ–¥–∞: $109.5 (-40%)"
                ),
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=inline_instruction_buttons
            )
            return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    await respond_to.bot.send_photo(
        chat_id=respond_to.chat.id,
        photo="https://play-lh.googleusercontent.com/BFkf2bgtxsCvsTnR2yw8yuWD3mgpThoyiRoBhoazTqFFMNOmdxGAAqS7vMATyNwelQ",
        caption=(
            "üî• –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ç—Ä–∞—Ñ–∏–∫—É, VPN —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö, "
            "YouTube –≤ 4K ‚Äî –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫!\n\n"
            "üî• –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –Ω–µ –¥–∞—Å—Ç –Ω–∏ –æ–¥–∏–Ω VPN —Å–µ—Ä–≤–∏—Å –≤ –º–∏—Ä–µ.\n\n"
            "‚úÖ –ù–∞—à –∫–∞–Ω–∞–ª: "
        ),
        reply_markup=inline_main_menu,
        parse_mode=ParseMode.HTML
    )

    
    
    
#–≥–æ–≤–Ω–æ





@router.callback_query(F.data == "help")
async def help_handler(callback: CallbackQuery):
    await callback.message.answer("üì¶ –ó–¥–µ—Å—å –±—É–¥—É—Ç –≤–∞—à–∏ —É—Å–ª—É–≥–∏")
    await callback.answer()

@router.callback_query(F.data == "reviews")
async def reviews(callback: CallbackQuery):
    await callback.message.edit_text("‚úçÔ∏è –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–∑—ã–≤—ã")
    await callback.answer()

@router.callback_query(F.data == "about_us")
async def about_us(callback: CallbackQuery):
    await callback.message.answer("–æ –Ω–∞—Å")
    await callback.answer()

@router.callback_query(F.data == "gift_friend")
async def gift_friend(callback: CallbackQuery):
    await callback.message.answer("üì¶ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –¥—Ä—É–≥—É")
    await callback.answer()

@router.callback_query(F.data == "partners")
async def partners(callback: CallbackQuery):
    await callback.message.answer("üì¶ –ó–¥–µ—Å—å –±—É–¥—É—Ç –≤–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã")
    await callback.answer()

@router.callback_query(F.data == "other_services")
async def other_services(callback: CallbackQuery):
    await callback.message.answer("üì¶ –ó–¥–µ—Å—å –±—É–¥—É—Ç –¥—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏")
    await callback.answer()
    
    
@router.callback_query(F.data == "buy_proxy")
async def buy_proxy(callback: CallbackQuery):
    await callback.message.answer("üì¶ –ó–¥–µ—Å—å –±—É–¥—É—Ç –¥—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏")
    await callback.answer()
