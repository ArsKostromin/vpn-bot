from aiogram import Router, F
from aiogram.types import CallbackQuery, FSInputFile
from aiogram.exceptions import TelegramBadRequest
from bot.keyboards.my_services_keyboard import my_services_menu, not_subscription
from .start import process_start 
from bot.services.user_service import get_user_subscriptions, get_user_info
from bot.keyboards.back_menu import back_to_main_menu

router = Router()

@router.callback_query(F.data == "my_services")
async def my_services_screen(callback: CallbackQuery):
    user_id = callback.from_user.id
    username = callback.from_user.username
    photo = FSInputFile("bot/media/telegram.jpg")

    subscriptions = await get_user_subscriptions(telegram_id=user_id)

    if not subscriptions:
        await callback.message.answer_photo(
            photo=photo,
            caption="–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. ‚ùå",
            reply_markup=not_subscription
        )
    else:
        for sub in subscriptions:
            status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if sub['is_active'] else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
            text = (
                f"<b>üîπ VPN:</b> {sub['vpn_type']}\n"
                f"<b>üîπ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> {sub['duration']}\n"
                f"<b>üîπ –¶–µ–Ω–∞:</b> {sub['price']}‚ÇΩ\n"
                f"<b>üîπ –°—Ç–∞—Ç—É—Å:</b> {status}\n"
                f"<b>üîπ –ù–∞—á–∞–ª–æ:</b> {sub['start_date'][:10]}\n"
                f"<b>üîπ –û–∫–æ–Ω—á–∞–Ω–∏–µ:</b> {sub['end_date'][:10]}\n\n"
                f"<b>–ù–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å VLESS:</b>\n"
                f"<code>{sub['vless']}</code>"
            )

            await callback.message.answer(
                text,
                parse_mode="HTML",
                reply_markup=back_to_main_menu
            )

    await callback.answer()

    
@router.callback_query(F.data == "account")
async def profile_handler(callback: CallbackQuery):
    user_id = callback.from_user.id

    user_info = await get_user_info(telegram_id=user_id)

    if not user_info:
        await callback.message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    balance = user_info.get('balance', 0)
    link_code = user_info.get('link_code', '–ù–µ—Ç')

    text = (
        f"üíº –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
        f"‚ñ™Ô∏è –ë–∞–ª–∞–Ω—Å: {balance}‚ÇΩ\n"
        f"‚ñ™Ô∏è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/Anonixvpn_vpnBot?start={link_code}"
    )

    reply_markup = back_to_main_menu

    await callback.message.answer(text, reply_markup=reply_markup)
    await callback.answer()