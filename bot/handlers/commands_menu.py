import asyncio
import logging
from aiogram import Bot
from aiogram.types import BotCommand
from aiogram.exceptions import TelegramServerError, TelegramNetworkError

async def set_main_menu(bot: Bot) -> bool:
    commands = [
        BotCommand(command="/start", description="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand(command="buyvpn", description="–ö—É–ø–∏—Ç—å VPN üõ°"),
        BotCommand(command="myservices", description="–ú–æ–∏ —É—Å–ª—É–≥–∏ üì¶"),
        BotCommand(command="account", description="–ê–∫–∫–∞—É–Ω—Ç ‚öôÔ∏è"),
        BotCommand(command="aboutus", description="–û –Ω–∞—Å ‚ÑπÔ∏è"),
    ]

    attempts = 3
    for attempt in range(1, attempts + 1):
        try:
            # –î–∞–¥–∏–º –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ Telegram –Ω–∞ –æ—Ç–≤–µ—Ç
            await bot.set_my_commands(commands, request_timeout=30.0)
            return True
        except (TelegramServerError, TelegramNetworkError) as e:
            delay = min(2 ** attempt, 30)
            logging.warning(
                f"set_my_commands: –≤—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt}/{attempts}): {e}. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {delay}—Å"
            )
            await asyncio.sleep(delay)
        except Exception as e:
            logging.exception(f"set_my_commands: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False

    logging.error("set_my_commands: –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫")
    return False
